// Generated by Dagger (https://dagger.dev).
package com.binancetracker.repo.api;

import com.binancetracker.repo.room.SingletonDataBase;
import com.binancetracker.utils.Settings;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BinanceApi_Factory implements Factory<BinanceApi> {
  private final Provider<Settings> settingsProvider;

  private final Provider<SingletonDataBase> singletonDataBaseProvider;

  public BinanceApi_Factory(Provider<Settings> settingsProvider,
      Provider<SingletonDataBase> singletonDataBaseProvider) {
    this.settingsProvider = settingsProvider;
    this.singletonDataBaseProvider = singletonDataBaseProvider;
  }

  @Override
  public BinanceApi get() {
    return newInstance(settingsProvider.get(), singletonDataBaseProvider.get());
  }

  public static BinanceApi_Factory create(Provider<Settings> settingsProvider,
      Provider<SingletonDataBase> singletonDataBaseProvider) {
    return new BinanceApi_Factory(settingsProvider, singletonDataBaseProvider);
  }

  public static BinanceApi newInstance(Settings settings, SingletonDataBase singletonDataBase) {
    return new BinanceApi(settings, singletonDataBase);
  }
}
